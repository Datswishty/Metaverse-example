/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MetareaToken, MetareaTokenInterface } from "../MetareaToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "newTreasury",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "newTransferFeePercentage",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_newStatus",
        type: "bool",
      },
    ],
    name: "changeAddressStatus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newFeePercentage",
        type: "uint256",
      },
    ],
    name: "changeFeePercentage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newTreasuryAddress",
        type: "address",
      },
    ],
    name: "changeTreasuryAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "feeLessTransfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "feelessAddresses",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "transferFeePercentage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "treasury",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200147838038062001478833981016040819052620000349162000207565b604080518082018252601781527f436f6f6c4d65746176657273654e616d6520546f6b656e00000000000000000060208083019182528351808501909452601684527f436f6f6c4d65746176657273654e616d65546f6b656e00000000000000000000908401528151919291620000ae9160039162000161565b508051620000c490600490602084019062000161565b505050620000e1620000db6200010b60201b60201c565b6200010f565b600680546001600160a01b0319166001600160a01b03939093169290921790915560075562000280565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b8280546200016f9062000243565b90600052602060002090601f016020900481019282620001935760008555620001de565b82601f10620001ae57805160ff1916838001178555620001de565b82800160010185558215620001de579182015b82811115620001de578251825591602001919060010190620001c1565b50620001ec929150620001f0565b5090565b5b80821115620001ec5760008155600101620001f1565b600080604083850312156200021b57600080fd5b82516001600160a01b03811681146200023357600080fd5b6020939093015192949293505050565b600181811c908216806200025857607f821691505b602082108114156200027a57634e487b7160e01b600052602260045260246000fd5b50919050565b6111e880620002906000396000f3fe608060405234801561001057600080fd5b50600436106101825760003560e01c80638da5cb5b116100d8578063a9059cbb1161008c578063f2fde38b11610066578063f2fde38b1461034a578063fae141921461035d578063fdcbaf0d1461037057600080fd5b8063a9059cbb146102eb578063dd2da646146102fe578063dd62ed3e1461031157600080fd5b80639d11aaaa116100bd5780639d11aaaa146102bc578063a457c2d7146102c5578063a6f353f0146102d857600080fd5b80638da5cb5b146102a357806395d89b41146102b457600080fd5b8063395093511161013a57806361d027b31161011457806361d027b31461024757806370a0823114610272578063715018a61461029b57600080fd5b806339509351146101fc57806340c10f191461020f57806343574a591461022457600080fd5b806318160ddd1161016b57806318160ddd146101c857806323b872dd146101da578063313ce567146101ed57600080fd5b806306fdde0314610187578063095ea7b3146101a5575b600080fd5b61018f610383565b60405161019c9190610ee9565b60405180910390f35b6101b86101b3366004610f78565b610415565b604051901515815260200161019c565b6002545b60405190815260200161019c565b6101b86101e8366004610fa2565b61042d565b6040516012815260200161019c565b6101b861020a366004610f78565b610451565b61022261021d366004610f78565b610490565b005b6101b8610232366004610fde565b60086020526000908152604090205460ff1681565b60065461025a906001600160a01b031681565b6040516001600160a01b03909116815260200161019c565b6101cc610280366004610fde565b6001600160a01b031660009081526020819052604090205490565b6102226104fd565b6005546001600160a01b031661025a565b61018f610563565b6101cc60075481565b6101b86102d3366004610f78565b610572565b6102226102e6366004610fde565b61061c565b6101b86102f9366004610f78565b6106b0565b61022261030c366004610fa2565b6106be565b6101cc61031f366004611000565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b610222610358366004610fde565b610732565b61022261036b366004611033565b610814565b61022261037e36600461104c565b610873565b60606003805461039290611088565b80601f01602080910402602001604051908101604052809291908181526020018280546103be90611088565b801561040b5780601f106103e05761010080835404028352916020019161040b565b820191906000526020600020905b8154815290600101906020018083116103ee57829003601f168201915b5050505050905090565b600033610423818585610916565b5060019392505050565b60003361043b858285610a6e565b610446858585610b1e565b506001949350505050565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909190610423908290869061048b90879061110b565b610916565b6005546001600160a01b031633146104ef5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6104f98282610b59565b5050565b6005546001600160a01b031633146105575760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104e6565b6105616000610c38565b565b60606004805461039290611088565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091908381101561060f5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f00000000000000000000000000000000000000000000000000000060648201526084016104e6565b6104468286868403610916565b6005546001600160a01b031633146106765760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104e6565b600680547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b600033610423818585610b1e565b3360009081526008602052604090205460ff1615156001146107225760405162461bcd60e51b815260206004820152601c60248201527f596f752063616e27742063616c6c20746869732066756e6374696f6e0000000060448201526064016104e6565b61072d838383610ca2565b505050565b6005546001600160a01b0316331461078c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104e6565b6001600160a01b0381166108085760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016104e6565b61081181610c38565b50565b6005546001600160a01b0316331461086e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104e6565b600755565b6005546001600160a01b031633146108cd5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104e6565b6001600160a01b0391909116600090815260086020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016911515919091179055565b6001600160a01b0383166109915760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f726573730000000000000000000000000000000000000000000000000000000060648201526084016104e6565b6001600160a01b038216610a0d5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f737300000000000000000000000000000000000000000000000000000000000060648201526084016104e6565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610b185781811015610b0b5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016104e6565b610b188484848403610916565b50505050565b600080610b2a83610eb9565b6006549193509150610b479086906001600160a01b031683610ca2565b610b52858584610ca2565b5050505050565b6001600160a01b038216610baf5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016104e6565b8060026000828254610bc1919061110b565b90915550506001600160a01b03821660009081526020819052604081208054839290610bee90849061110b565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b600580546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038316610d1e5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f647265737300000000000000000000000000000000000000000000000000000060648201526084016104e6565b6001600160a01b038216610d9a5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f657373000000000000000000000000000000000000000000000000000000000060648201526084016104e6565b6001600160a01b03831660009081526020819052604090205481811015610e295760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e6365000000000000000000000000000000000000000000000000000060648201526084016104e6565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610e6090849061110b565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610eac91815260200190565b60405180910390a3610b18565b600080606460075484610ecc9190611123565b610ed69190611160565b9050610ee2818461119b565b9150915091565b600060208083528351808285015260005b81811015610f1657858101830151858201604001528201610efa565b81811115610f28576000604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b80356001600160a01b0381168114610f7357600080fd5b919050565b60008060408385031215610f8b57600080fd5b610f9483610f5c565b946020939093013593505050565b600080600060608486031215610fb757600080fd5b610fc084610f5c565b9250610fce60208501610f5c565b9150604084013590509250925092565b600060208284031215610ff057600080fd5b610ff982610f5c565b9392505050565b6000806040838503121561101357600080fd5b61101c83610f5c565b915061102a60208401610f5c565b90509250929050565b60006020828403121561104557600080fd5b5035919050565b6000806040838503121561105f57600080fd5b61106883610f5c565b91506020830135801515811461107d57600080fd5b809150509250929050565b600181811c9082168061109c57607f821691505b602082108114156110d6577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000821982111561111e5761111e6110dc565b500190565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561115b5761115b6110dc565b500290565b600082611196577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b6000828210156111ad576111ad6110dc565b50039056fea2646970667358221220ed5caf96594c247b50c21aa230405a7e118baa1d0a034c93ddeb2e5f18d7afe864736f6c634300080b0033";

export class MetareaToken__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    newTreasury: string,
    newTransferFeePercentage: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MetareaToken> {
    return super.deploy(
      newTreasury,
      newTransferFeePercentage,
      overrides || {}
    ) as Promise<MetareaToken>;
  }
  getDeployTransaction(
    newTreasury: string,
    newTransferFeePercentage: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      newTreasury,
      newTransferFeePercentage,
      overrides || {}
    );
  }
  attach(address: string): MetareaToken {
    return super.attach(address) as MetareaToken;
  }
  connect(signer: Signer): MetareaToken__factory {
    return super.connect(signer) as MetareaToken__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MetareaTokenInterface {
    return new utils.Interface(_abi) as MetareaTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MetareaToken {
    return new Contract(address, _abi, signerOrProvider) as MetareaToken;
  }
}
