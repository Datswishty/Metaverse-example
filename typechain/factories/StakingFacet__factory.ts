/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { StakingFacet, StakingFacetInterface } from "../StakingFacet";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "enum Nfts",
        name: "selectedNft",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "stakeTime",
        type: "uint256",
      },
    ],
    name: "Staked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "enum Nfts",
        name: "selectedNft",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "unstakeTime",
        type: "uint256",
      },
    ],
    name: "Unstaked",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
      {
        internalType: "enum Nfts",
        name: "_selectedNft",
        type: "uint8",
      },
    ],
    name: "getStaked",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum Nfts",
        name: "_selectedNft",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum Nfts",
        name: "_selectedNft",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "unstake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506109fd806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063978d7b1e14610046578063b4545b9e1461006f578063dd752e5514610084575b600080fd5b61005961005436600461086e565b610097565b60405161006691906108bc565b60405180910390f35b61008261007d366004610900565b610147565b005b610082610092366004610900565b610677565b73ffffffffffffffffffffffffffffffffffffffff821660009081526004602052604081206060918360038111156100d1576100d161092a565b60038111156100e2576100e261092a565b815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561013a57602002820191906000526020600020905b815481526020019060010190808311610126575b5050505050905092915050565b33600090815260046020526040812090600182019084600381111561016e5761016e61092a565b600381111561017f5761017f61092a565b81526020808201929092526040908101600090812085825290925290205460ff16151560011461020f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f596f7520617265206e6f7420746865206f776e65720000000000000000000000604482015260640160405180910390fd5b6003600084828111156102245761022461092a565b60038111156102355761023561092a565b815260208101919091526040908101600090812054905491517f42842e0e00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9283166004820152336024820152604481018590529116906342842e0e90606401600060405180830381600087803b1580156102c157600080fd5b505af11580156102d5573d6000803e3d6000fd5b50503360009081526004602052604081209092506001019050818560038111156103015761030161092a565b60038111156103125761031261092a565b815260208082019290925260409081016000908120868252909252812080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001692151592909217909155600182828660038111156103735761037361092a565b60038111156103845761038461092a565b815260208101919091526040016000205461039f9190610940565b9050600082818660038111156103b7576103b761092a565b60038111156103c8576103c861092a565b815260200190815260200160002082815481106103e7576103e7610965565b90600052602060002001549050600083600201600087600381111561040e5761040e61092a565b600381111561041f5761041f61092a565b81526020808201929092526040908101600090812088825283528181205433825260049093529081209192508391908860038111156104605761046061092a565b60038111156104715761047161092a565b8152602001908152602001600020828154811061049057610490610965565b600091825260208083209091019290925533815260049091526040812082916002909101908860038111156104c7576104c761092a565b60038111156104d8576104d861092a565b81526020808201929092526040908101600090812086825283528181209390935533835260049091528120818860038111156105165761051661092a565b60038111156105275761052761092a565b8152602081019190915260400160002054111561061d57336000908152600460205260408120908760038111156105605761056061092a565b60038111156105715761057161092a565b815260200190815260200160002080548061058e5761058e61097b565b6000828152602080822083017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9081018390559092019092553382526004905260408120600201908760038111156105e8576105e861092a565b60038111156105f9576105f961092a565b81526020019081526020016000206000868152602001908152602001600020600090555b3373ffffffffffffffffffffffffffffffffffffffff167fc09907c8361df7440154544928118b1f96b9d552ff0225e83727064940a0341f87874260405161066793929190610991565b60405180910390a2505050505050565b60036000838281111561068c5761068c61092a565b600381111561069d5761069d61092a565b815260208101919091526040908101600090812054905491517f42842e0e00000000000000000000000000000000000000000000000000000000815233600482015273ffffffffffffffffffffffffffffffffffffffff9283166024820152604481018490529116906342842e0e90606401600060405180830381600087803b15801561072957600080fd5b505af115801561073d573d6000803e3d6000fd5b5050336000908152600460205260408120925090508360038111156107645761076461092a565b60038111156107755761077561092a565b8152602080820192909252604090810160009081208054600181810183559183528483200185905533825260049093529081208201908460038111156107bd576107bd61092a565b60038111156107ce576107ce61092a565b8152602001908152602001600020600083815260200190815260200160002060006101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff167f0a79772743d87ba7576fca49d64545ccce7a2369f471f1badf89540cdb09b28283834260405161084e93929190610991565b60405180910390a25050565b80356004811061086957600080fd5b919050565b6000806040838503121561088157600080fd5b823573ffffffffffffffffffffffffffffffffffffffff811681146108a557600080fd5b91506108b36020840161085a565b90509250929050565b6020808252825182820181905260009190848201906040850190845b818110156108f4578351835292840192918401916001016108d8565b50909695505050505050565b6000806040838503121561091357600080fd5b61091c8361085a565b946020939093013593505050565b634e487b7160e01b600052602160045260246000fd5b60008282101561096057634e487b7160e01b600052601160045260246000fd5b500390565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052603160045260246000fd5b60608101600485106109b357634e487b7160e01b600052602160045260246000fd5b93815260208101929092526040909101529056fea26469706673582212204374d720abed83aad25bfa5f30f816f48b833df8a9fe9433b4a021ed5c05362464736f6c634300080b0033";

export class StakingFacet__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<StakingFacet> {
    return super.deploy(overrides || {}) as Promise<StakingFacet>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): StakingFacet {
    return super.attach(address) as StakingFacet;
  }
  connect(signer: Signer): StakingFacet__factory {
    return super.connect(signer) as StakingFacet__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StakingFacetInterface {
    return new utils.Interface(_abi) as StakingFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StakingFacet {
    return new Contract(address, _abi, signerOrProvider) as StakingFacet;
  }
}
